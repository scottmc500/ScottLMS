name: Pull Request Validation

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Manual trigger option

jobs:
  validate-terraform:
    name: Validate Terraform Configuration
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.13.3'
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: make terraform-init

      - name: Create terraform.tfvars from Makefile
        run: make terraform-build-tfvars

      - name: Terraform Format Check
        run: make terraform-check-fmt

      - name: Terraform Validate
        run: make terraform-validate

      - name: Terraform Plan (Dry Run)
        run: make terraform-plan

      - name: Cleanup terraform.tfvars
        if: always()
        run: |
          echo "Cleaning up terraform.tfvars file for security..."
          if [ -f terraform/terraform.tfvars ]; then
            rm terraform/terraform.tfvars
            echo "âœ… terraform.tfvars file removed"
          else
            echo "No terraform.tfvars file to clean up"
          fi

  build-and-test-docker-images:
    name: Build and Test Docker Images
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker images using Makefile
        run: make docker-build

      - name: Test Docker images using Makefile
        run: make docker-test-all

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Check Directory
        run: ls -la

      - name: Run Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy Scan Results to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

name: Production Deployment

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Manual trigger option

env:
  TAG: ${{ github.sha }}
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_PASSWORD }}

      - name: Build Docker Images
        run: make docker-build

      - name: Test Docker Images
        run: make docker-test-all

      - name: Push Docker Images
        run: make docker-push

  build-infrastructure:
    name: Build Infrastructure
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.13.3'
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Create terraform.tfvars from GitHub Secrets
        run: |
          echo "Creating terraform.tfvars file from GitHub secrets..."
          cat > terraform/terraform.tfvars << EOF
          # Generated from GitHub Secrets for Production Deployment
          atlas_public_key    = "${{ secrets.MONGODB_ATLAS_PUBLIC_KEY }}"
          atlas_private_key   = "${{ secrets.MONGODB_ATLAS_PRIVATE_KEY }}"
          atlas_org_id        = "${{ secrets.MONGODB_ATLAS_ORG_ID }}"
          atlas_project_id    = "${{ secrets.MONGODB_ATLAS_PROJECT_ID }}"
          docker_hub_username = "${{ secrets.DOCKER_HUB_USERNAME }}"
          docker_hub_password = "${{ secrets.DOCKER_HUB_PASSWORD }}"
          linode_token        = "${{ secrets.LINODE_TOKEN }}"
          linode_cluster_id   = "${{ secrets.LINODE_CLUSTER_ID }}"
          app_image_tag       = "${{ env.TAG }}"
          EOF
          echo "terraform.tfvars file created successfully"
          cat terraform/terraform.tfvars

      - name: Terraform Init
        run: make terraform-init

      - name: Terraform Validate
        run: make terraform-validate

      - name: Terraform Apply
        run: make terraform-apply

      - name: Cleanup terraform.tfvars
        if: always()
        run: |
          echo "Cleaning up terraform.tfvars file for security..."
          if [ -f terraform/terraform.tfvars ]; then
            rm terraform/terraform.tfvars
            echo "âœ… terraform.tfvars file removed"
          else
            echo "No terraform.tfvars file to clean up"
          fi

  deploy-application:
    name: Deploy Application
    runs-on: ubuntu-latest
    environment: production
    needs: [build-and-push, build-infrastructure]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.13.3'
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      
      - name: Create terraform.tfvars from GitHub Secrets
        run: |
          echo "Creating terraform.tfvars file from GitHub secrets..."
          cat > terraform/terraform.tfvars << EOF
          # Generated from GitHub Secrets for Production Deployment
          atlas_public_key    = "${{ secrets.MONGODB_ATLAS_PUBLIC_KEY }}"
          atlas_private_key   = "${{ secrets.MONGODB_ATLAS_PRIVATE_KEY }}"
          atlas_org_id        = "${{ secrets.MONGODB_ATLAS_ORG_ID }}"
          atlas_project_id    = "${{ secrets.MONGODB_ATLAS_PROJECT_ID }}"
          docker_hub_username = "${{ secrets.DOCKER_HUB_USERNAME }}"
          docker_hub_password = "${{ secrets.DOCKER_HUB_PASSWORD }}"
          linode_token        = "${{ secrets.LINODE_TOKEN }}"
          linode_cluster_id   = "${{ secrets.LINODE_CLUSTER_ID }}"
          app_image_tag       = "${{ env.TAG }}"
          EOF
          echo "terraform.tfvars file created successfully"
          cat terraform/terraform.tfvars

      - name: Terraform Init
        run: make terraform-init

      - name: Sync Kubeconfig
        run: make k8s-sync-kubeconfig

      - name: Setup Environment
        run: make k8s-set-environment

      - name: Deploy Backend
        run: make k8s-deploy-backend
        id: deploy-backend

      - name: Deploy Frontend
        run: make k8s-deploy-frontend

      - name: Perform Health Checks
        run: make perform-health-checks
